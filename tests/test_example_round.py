from thinelc import PyPBFInt, PyPBFFloat
from thinelc.utils import *
import os


abs_path = os.path.abspath(os.path.dirname(__file__))


print("test parse_input_dict: \n")
input_list = [
    # Linear Term
    {0: 53.550050047480966, 1: 33.01363408349268, 2: 61.972980420498914, 3: 1.8339520322329905, 4: 67.77103440539256, 5: 61.28221166466044, 6: 40.96954245193537, 7: 42.17715208839638},

    # Quadratic Term
    {(0, 1): 50.922441833827484, (0, 2): 48.29428374140523, (0, 3): 16.304298613983843, (0, 4): 26.7858063039301, (0, 5): 36.94719787264254, (0, 6): 31.097918382260808, (0, 7): 66.31425403098898, (1, 2): 40.38463226446161, (1, 3): 14.107357706003627, (1, 4): 47.01796520859973, (1, 5): 41.67551113347407, (1, 6): 44.51336824874781, (1, 7): 24.268650845343622, (2, 3): 16.652134629623426, (2, 4): 48.571888348819655, (2, 5): 49.00708871030495, (2, 6): 45.15410013099699, (2, 7): 32.76469262184217, (3, 4): 17.423346347631973, (3, 5): 17.678357022600807, (3, 6): 15.222460852334763, (3, 7): 13.673449601170976, (4, 5): 43.101354394030785, (4, 6): 40.42664646557161, (4, 7): 51.45737454342285, (5, 6): 44.847491583673744, (5, 7): 43.98744489522803, (6, 7): 49.35242023178369},

    # 3-order Term
    {(0, 1, 2): -61.050387098722055, (0, 1, 3): -12.964050251774069, (0, 2, 3): -18.411384298999195, (1, 2, 3): -14.840138391732765, (0, 1, 4): -63.89328817626969, (0, 2, 4): -90.05025352973708, (1, 2, 4): -69.19303752041611, (0, 1, 5): -60.33151854118164, (0, 2, 5): -84.71836339632053, (1, 2, 5): -67.62545547514429, (0, 1, 6): -51.3359033232485, (0, 2, 6): -73.3179623585048, (1, 2, 6): -54.738382270619525, (0, 1, 7): -54.62127637350625, (0, 2, 7): -70.89820252646483, (1, 2, 7): -65.98948853322833, (0, 3, 4): -19.699216894204042, (1, 3, 4): -14.683045958273592, },

    # 4-order Term
    {(0, 1, 2, 3): 5.49370249894142, (0, 1, 2, 4): 33.377841194832286, (0, 1, 2, 5): 30.852230401018296, (0, 1, 2, 6): 25.08119206034913, (0, 1, 2, 7): 27.29580804230298, (0, 1, 3, 4): 5.85274370387655, (0, 1, 3, 5): 5.4074973794919, (0, 1, 3, 6): 4.398524067742315, (0, 1, 3, 7): 4.775632853495953, (0, 1, 4, 5): 32.90832368483933, (0, 1, 4, 6): 26.845017683257296, (0, 1, 4, 7): 28.802650085733923, (0, 1, 5, 6): 24.736798343341192, (0, 1, 5, 7): 26.758187273672554, (0, 1, 6, 7): 21.610274491807083, (0, 2, 3, 4): 9.23057731401039,},

    # Constant Term
    -1.1314717797145777]

input_list = convert_values(input_list, round_digit=3)
# save_data(input_list, os.path.join(abs_path, "Q_8_matrix_float.pkl"))

for line in input_list[:-1]:
    print(len(line.values()))

# pbf2 = PyPBFFloat()
# pbf2 = parse_input_dict(pbf2, input_list)
# pbf2.shrink()
# pbf2.print()



print("test e2e_pipeline: ")
output_list1, num_newvars = e2e_pipeline(input_list, mode=0, use_int=True, display=True)
print(num_newvars)
print("\n")
